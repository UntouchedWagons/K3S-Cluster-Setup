csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.iscsi"

# add note here about volume expansion requirements
storageClasses:
- name: freenas-iscsi-csi
  defaultClass: true
  reclaimPolicy: Delete
  volumeBindingMode: Immediate
  allowVolumeExpansion: true
  parameters:
    # for block-based storage can be ext3, ext4, xfs
    # for nfs should be nfs
    fsType: ext4
      
    # if true, volumes created from other snapshots will be
    # zfs send/received instead of zfs cloned
    # detachedVolumesFromSnapshots: "false"
    
    # if true, volumes created from other volumes will be
    # zfs send/received instead of zfs cloned
    # detachedVolumesFromVolumes: "false"

  mountOptions: []
  secrets:
    provisioner-secret:
    controller-publish-secret:
    node-stage-secret:
#      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
#      # if doing CHAP
#      node-db.node.session.auth.authmethod: CHAP
#      node-db.node.session.auth.username: foo
#      node-db.node.session.auth.password: bar
#
#      # if doing mutual CHAP
#      node-db.node.session.auth.username_in: baz
#      node-db.node.session.auth.password_in: bar
    node-publish-secret:
    controller-expand-secret:

# if your cluster supports snapshots you may enable below
volumeSnapshotClasses: []
#- name: freenas-iscsi-csi
#  parameters:
#  # if true, snapshots will be created with zfs send/receive
#  # detachedSnapshots: "false"
#  secrets:
#    snapshotter-secret:

driver:
  config:
    driver: freenas-api-iscsi
    instance_id:
    httpConnection:
      protocol: http
      host: storage.internal.untouchedwagons.com
      port: 80
      apiKey: 6-7lAXZKr8PTcBuAn8ZnEoob2awG2US21Xp5QScaCPeMvdr3RukoXSLCBSsKg6Rduj
      allowInsecure: true
      apiVersion: 2

    zfs:
      datasetParentName: nvme/Kubernetes/Production
      detachedSnapshotsDatasetParentName: tank/K8S/Snaps
      zvolCompression: ""
      zvolDedup: ""
      zvolEnableReservation: false
      zvolBlocksize: "16K"

    iscsi:
      targetPortal: "storage.internal.untouchedwagons.com:3260"
      targetPortals: []
      interface:
      namePrefix: csi-
      nameSuffix: "-clustera"
      targetGroups:
        - targetGroupPortalGroup: 6
          targetGroupInitiatorGroup: 5
          targetGroupAuthType: None
          targetGroupAuthGroup:
      #extentCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
      extentInsecureTpc: true
      extentXenCompat: false
      extentDisablePhysicalBlocksize: true
      # 512, 1024, 2048, or 4096,
      extentBlocksize: 4096
      # "" (let FreeNAS decide, currently defaults to SSD), Unknown, SSD, 5400, 7200, 10000, 15000
      extentRpm: "SSD"
      # 0-100 (0 == ignore)
      extentAvailThreshold: 0