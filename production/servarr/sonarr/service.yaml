---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarr
  namespace: servarr
  labels:
    app: sonarr
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      securityContext:
        fsGroup: 568
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:15.5
          env:
            - name: INIT_POSTGRES_HOST
              value: "postgresql.database.svc.cluster.local"
            - name: INIT_POSTGRES_USER
              value: "sonarr"
            - name: INIT_POSTGRES_PASS
              value: "AuthorizeBrazenWakenVerify"
            - name: INIT_POSTGRES_DBNAME
              value: "sonarr-main sonarr-logs"
            - name: INIT_POSTGRES_SUPER_PASS
              value: "TrembleBulwarkBeautifulGossip"
        - name: restore
          image: untouchedwagons/simple-restore:1.0.4
          volumeMounts:
            - mountPath: /data
              name: sonarr-config
            - mountPath: /backups
              name: backups
          env:
            - name: BACKUP_APPEND_DIRECTORY
              value: "/kubernetes/production/sonarr"
            - name: BACKUP_BASE_NAME
              value: "sonarr"
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr-develop:4.0.1.987
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
              add: ['CHOWN', 'FOWNER', 'SETGID', 'SETUID']
          env:
            - name: SONARR__API_KEY
              value: "0fe183143c5745269ae3b9ea163c8f85"
            - name: SONARR__AUTHENTICATION_METHOD
              value: "Forms"
            - name: SONARR__AUTHENTICATION_REQUIRED
              value: "DisabledForLocalAddresses"
            - name: SONARR__POSTGRES_HOST
              value: "postgresql.database.svc.cluster.local"
            - name: SONARR__POSTGRES_MAIN_DB
              value: "sonarr-main"
            - name: SONARR__POSTGRES_LOG_DB
              value: "sonarr-logs"
            - name: SONARR__POSTGRES_USER
              value: "sonarr"
            - name: SONARR__POSTGRES_PASSWORD
              value: "AuthorizeBrazenWakenVerify"
          resources:
            limits:
              memory: 1Gi
              cpu: "4"
            requests:
              memory: 512Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /config
              name: sonarr-config
            - mountPath: /mnt/data/Videos
              name: videos
            - mountPath: /mnt/data/Torrents
              name: torrents
            - mountPath: /mnt/data/Usenet
              name: usenet
            - mountPath: /tmp
              name: tmp
        - name: backup
          image: untouchedwagons/simple-backup:1.0.5
          resources:
            limits:
              memory: 256Mi
              cpu: "1"
            requests:
              memory: 128Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /data
              name: sonarr-config
            - mountPath: /backups
              name: backups
          env:
            - name: BACKUP_APPEND_DIRECTORY
              value: "/kubernetes/production/sonarr"
            - name: BACKUP_BASE_NAME
              value: "sonarr"
            - name: BACKUP_RETENTION
              value: "24"
            - name: BACKUP_FREQUENCY
              value: "0 0 * * *"

      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: videos
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Videos
        - name: torrents
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Torrents
        - name: usenet
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Usenet
        - name: backups
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Backups
        - name: tmp
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: servarr
spec:
  selector:
    app: sonarr
  ports:
    - name: http
      targetPort: 8989
      port: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  namespace: servarr
  annotations:
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  rules:
  - host: sonarr.services.untouchedwagons.com
    http:
      paths:
      - backend:
          service:
            name: sonarr
            port:
              number: 8989
        path: /
        pathType: Prefix
  tls:
    - hosts: 
      - untouchedwagons.com
      secretName: com-untouchedwagons-services
