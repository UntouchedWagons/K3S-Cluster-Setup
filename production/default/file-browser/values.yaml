---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/values.schema.json

controllers:
  main:
    strategy: Recreate

    containers:
      main:
        image:
          repository: filebrowser/filebrowser
          tag: v2.29.0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
            add: ['CHOWN', 'FOWNER', 'SETGID', 'SETUID']
        resources:
          requests:
            memory: 16Mi
            cpu: "1m"
          limits:
            memory: 256Mi
            cpu: "500m"

service:
  main:
    controller: main
    ports:
      http:
        port: 80

ingress:
  main:
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Services
      gethomepage.dev/icon: filebrowser.png
      gethomepage.dev/name: File Browser
    hosts:
      - host: file-browser.services.untouchedwagons.com
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http
    tls:
      - hosts: 
        - untouchedwagons.com
        secretName: com-untouchedwagons-services

persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    dataSourceRef:
      kind: ReplicationDestination
      apiGroup: volsync.backube
      name: file-browser-config
    advancedMounts:
      main: 
        main:
          - path: /database

  settings:
    type: configMap
    name: file-browser
    advancedMounts:
      main: 
        main:
          - path: /.filebrowser.json
            subPath: filebrowser.json

  nfs-videos:
    type: "nfs"
    server: "192.168.35.30"
    path: "/mnt/tank/Media/Videos"
    advancedMounts:
      main: 
        main:
          - path: /mnt/data/Videos

networkpolicies:
  main:
    controller: main
    policyTypes:
      - Egress
    rules:
      egress:
        - {}

configMaps:
  file-browser:
    enabled: true
    data:
      filebrowser.json: |
        {
          "port": 80,
          "baseURL": "",
          "address": "",
          "log": "stdout",
          "database": "/database/filebrowser.db",
          "root": "/mnt/data/"
        }
