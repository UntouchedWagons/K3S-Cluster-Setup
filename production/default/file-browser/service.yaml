apiVersion: v1
kind: ConfigMap
metadata:
  name: file-browser
  namespace: default
data:
  settings.json: |
    {
      "port": 80,
      "baseURL": "",
      "address": "",
      "log": "stdout",
      "database": "/database/filebrowser.db",
      "root": "/mnt/data/"
    }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: file-browser-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: file-browser
  policyTypes:
  - Egress
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: file-browser
  namespace: default
  labels:
    app: file-browser
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: file-browser
  template:
    metadata:
      labels:
        app: file-browser
    spec:
      securityContext:
        fsGroup: 568
      initContainers:
        - name: restore
          image: untouchedwagons/simple-restore:1.0.4
          volumeMounts:
            - mountPath: /data
              name: file-browser-config
            - mountPath: /backups
              name: backups
          env:
            - name: BACKUP_APPEND_DIRECTORY
              value: "/kubernetes/production/file-browser"
            - name: BACKUP_BASE_NAME
              value: "file-browser"
      containers:
        - name: file-browser
          image: filebrowser/filebrowser:v2.27.0-s6
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
              add: ['CHOWN', 'FOWNER', 'SETGID', 'SETUID']
          resources:
            limits:
              memory: 1Gi
              cpu: "2"
            requests:
              memory: 256Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /database
              name: file-browser-config
            - mountPath: /mnt/data/Videos
              name: videos
              readOnly: true
            - mountPath: /config/settings.json
              name: file-browser
              subPath: settings.json
        - name: backup
          image: untouchedwagons/simple-backup:1.0.5
          resources:
            limits:
              memory: 256Mi
              cpu: "1"
            requests:
              memory: 128Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /data
              name: file-browser-config
            - mountPath: /backups
              name: backups
          env:
            - name: BACKUP_APPEND_DIRECTORY
              value: "/kubernetes/production/file-browser"
            - name: BACKUP_BASE_NAME
              value: "file-browser"
            - name: BACKUP_RETENTION
              value: "24"
            - name: BACKUP_FREQUENCY
              value: "0 0 * * *"
      volumes:
        - name: file-browser-config
          persistentVolumeClaim:
            claimName: file-browser-config
        - name: backups
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Backups
        - name: videos
          nfs:
            server: 192.168.35.30
            path: /mnt/tank/Media/Videos
        - name: file-browser
          configMap:
            name: file-browser
          
---
apiVersion: v1
kind: Service
metadata:
  name: file-browser
  namespace: default
spec:
  selector:
    app: file-browser
  ports:
    - name: http
      targetPort: 80
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: file-browser
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  rules:
  - host: file-browser.services.untouchedwagons.com
    http:
      paths:
      - backend:
          service:
            name: file-browser
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
    - hosts: 
      - untouchedwagons.com
      secretName: com-untouchedwagons-services
