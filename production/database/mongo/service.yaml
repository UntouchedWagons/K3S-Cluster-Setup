apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
  namespace: database
data:
  unifi.js: |
    db.getSiblingDB("unifi").createUser({user: "unifi", pwd: "ElectronicOstensiblyHeartStride", roles: [{role: "dbOwner", db: "unifi"}]});
    db.getSiblingDB("unifi_stat").createUser({user: "unifi", pwd: "ElectronicOstensiblyHeartStride", roles: [{role: "dbOwner", db: "unifi_stat"}]});
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongodb
  namespace: database
  labels:
    app: mongodb
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.4.27-rc0
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-config
            - mountPath: /docker-entrypoint-initdb.d/init-mongo.js
              name: mongodb-init
              subPath: unifi.js
      volumes:
        - name: mongodb-init
          configMap:
            name: mongodb-init
        - name: mongodb-config
          persistentVolumeClaim:
            claimName: mongodb-config
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: database
spec:
  selector:
    app: mongodb
  ports:
    - name: http
      targetPort: 27017
      port: 27017
